@page "/add-product"
@rendermode InteractiveServer
@using shopData.Models
@inject adminShop.Services.IProductService ProductService
@inject shopDbContext Db
@inject NavigationManager Navigation

<h3>Add New Product</h3>

<div class="mb-3">
    <label class="form-label">Product Name</label>
    <input type="text" class="form-control" @bind="nameProduct" />
</div>
<div class="mb-3">
    <label class="form-label">Price</label>
    <input type="number" step="0.01" class="form-control" @bind="price" />
</div>
<div class="mb-3">
    <label class="form-label">Category</label>
    <div class="d-flex gap-2">
        <select class="form-select" style="flex:1" @bind="selectedCategoryId">
            <option value="">-- Select Category --</option>
            @foreach (var cat in categories)
            {
                <option value="@cat.CategoryId">@cat.NameCategories</option>
            }
        </select>
        <button class="btn btn-outline-secondary" @onclick="ShowAddCategoryModal">+</button>
    </div>
</div>

<button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
<button class="btn btn-primary" @onclick="InsertProduct">Save</button>

@if (isAddCategoryModalOpen)
{
    <div class="modal show d-block" tabindex="-1" style="background:rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Category</h5>
                    <button type="button" class="btn-close" @onclick="CloseAddCategoryModal"></button>
                </div>
                <div class="modal-body">
                    <input type="text" class="form-control" placeholder="Category Name" @bind="newCategoryName" />
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CloseAddCategoryModal">Cancel</button>
                    <button class="btn btn-primary" @onclick="AddCategory">Save</button>
                </div>
            </div>
        </div>
    </div>
}


@code {
    private string nameProduct;
    private decimal price;
    private int selectedCategoryId;
    private List<Category> categories = new();

    private bool isAddCategoryModalOpen = false;
    private string newCategoryName = "";

    protected override async Task OnInitializedAsync()
    {
        categories = await Db.Categories.ToListAsync();
    }

    private async Task InsertProduct()
    {
        var product = new Product
        {
            NameProduct = nameProduct,
            Price = price,
            CategoryId = selectedCategoryId
        };

        await ProductService.AddProduct(product);
        Navigation.NavigateTo("/products");
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/products");
    }

    private void ShowAddCategoryModal()
    {
        newCategoryName = "";
        isAddCategoryModalOpen = true;
    }

    private void CloseAddCategoryModal()
    {
        isAddCategoryModalOpen = false;
    }

    private async Task AddCategory()
    {
        if(!string.IsNullOrWhiteSpace(newCategoryName))
        {
            var newCategory = new Category { NameCategories = newCategoryName };
            Db.Categories.Add(newCategory);
            await Db.SaveChangesAsync();

            // Перезагрузка списка и автоматический выбор
            categories = await Db.Categories.ToListAsync();
            selectedCategoryId = newCategory.CategoryId;

            isAddCategoryModalOpen = false;
        }
    }
}
