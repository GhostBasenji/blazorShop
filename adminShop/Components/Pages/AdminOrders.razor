@page "/orders"
@inject shopDbContext Db

<h3>Orders List</h3>

@if (orders == null)
{
    <p><em>Loading orders...</em></p>
}
else if (!orders.Any())
{
    <p>No orders found.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>Customer ID</th>
                <th>Order Date</th>
                <th>Delivery Address</th>
                <th>Items</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orders)
            {
                <tr>
                    <td>@order.OrderId</td>
                    <td>@order.CustomerId</td>
                    <td>@order.OrderDate?.ToString("g")</td>
                    <td>@order.DeliveryAddress</td>
                    <td>
                        <ul>
                            @foreach (var item in order.OrderItems)
                            {
                                <li>@item.Product.NameProduct (Qty: @item.Quantity)</li>
                            }
                        </ul>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Order> orders;

    protected override async Task OnInitializedAsync()
    {
        orders = await Db.Orders
            .Include(o => o.OrderItems)
            .ThenInclude(oi => oi.Product)
            .ToListAsync();
    }
}
