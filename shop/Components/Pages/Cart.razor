@page "/cart"
@rendermode InteractiveServer
@using shopData.Models
@inject CartService CartService
@inject NavigationManager Navigation

<h3>Your Cart</h3>

@if (!CartService.GetItems().Any())
{
    <p><em>Your cart is empty.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Subtotal</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in CartService.GetItems())
            {
                <tr>
                    <td>@item.Product.NameProduct</td>
                    <td>@item.Product.Price</td>
                    <td>
                        <input type="number" min="1" class="form-control"
                               style="width: 80px;"
                               @bind="item.Quantity"
                               @bind:event="oninput" />
                    </td>
                    <td>@(item.Product.Price* item.Quantity)</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="@(() => RemoveItem(item.Product.ProductId))">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h5>Total: @CartService.GetItems().Sum(i => i.Product.Price * i.Quantity).ToString("C")</h5>

    <button class="btn btn-secondary me-2" @onclick="ClearCart">Clear Cart</button>
    <button class="btn btn-primary" @onclick="Checkout">Checkout</button>
}

@code {
    private void RemoveItem(int productId)
    {
        CartService.RemoveItem(productId);
    }

    private void ClearCart()
    {
        CartService.Clear();
    }

    private void Checkout()
    {
        Navigation.NavigateTo("/checkout");
    }
}
